# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|cygwin) color_prompt=yes;;
esac

# If vim is around, make it EDITOR
command -v vim > /dev/null 2>&1 && export EDITOR=$(command -v vim)

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
		if [ "$TERM" = cygwin ]; then
			color_prompt=yes
		else
			color_prompt=
		fi
	fi
fi


if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# Append to history after every command so that killed terminals etc. don't loose history
# Use "history -n" to reload the current history file
export PROMPT_COMMAND="history -a"

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias vv="du --max-depth=1 -k | sort -nr | cut -f2 | xargs -d '\n' du -sh"

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

if [ -f /etc/bash_completion.d/git ]; then
	. /etc/bash_completion.d/git
fi

if [ -f ~/.local/bin/bashmarks.sh ]; then
	. ~/.local/bin/bashmarks.sh
fi

# Add local reuby gems paths, mostly for tmuxinator
export PATH=${PATH}:~/.gem/ruby/1.8/bin

# Activate tmuxinator
[[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

platformstr=$(uname)
if [ $platformstr == "Linux" ]; then
	alias tmux="TERM=xterm-256color tmux"
	alias mux="TERM=xterm-256color mux"
fi
if [ $platformstr == "Darwin" ]; then
	alias tmux="TERM=screen-256color tmux"
	alias mux="TERM=screen-256color mux"
fi

if [ -d ${HOME}/anaconda/bin ]; then
	export PATH="${HOME}/anaconda/bin:$PATH"
fi

# For macports
if [ -d /opt/local/bin ]; then
	export PATH=/opt/local/bin:${PATH}
fi

if [ -d /opt/local/sbin ]; then
	export PATH=/opt/local/sbin:${PATH}
fi



if [ -f /Applications/DeltaWalker.app/Contents/MacOS/dw ]; then
	alias dw="/Applications/DeltaWalker.app/Contents/MacOS/dw"
fi

export PATH=~/.local/bin:${PATH}
if [ -d ~/.local-$(hostname)/bin ]; then
	export PATH=~/.local-$(hostname)/bin:${PATH}
fi

set -o vi

if [ -f /usr/local/bin/brew ]; then
	if [ -d $(brew --prefix)/bin ]; then
		export PATH=$(brew --prefix)/bin:${PATH}
	fi

	if [ -f $(brew --prefix)/etc/bash_completion ]; then
		. $(brew --prefix)/etc/bash_completion
	fi
fi

# Some handy functions
tmake () { make  $@ 2>&1 | tee make.out; }
tninja () { ninja  $@ 2>&1 | tee ninja.out; }
tscons () { scons  $@ 2>&1 | tee scons.out; }
hgrep() { history | grep $@; }

